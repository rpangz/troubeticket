{"remainingRequest":"D:\\aplikasi\\Vuejs\\TroubeTicket\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\aplikasi\\Vuejs\\TroubeTicket\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"D:\\aplikasi\\Vuejs\\TroubeTicket\\src\\views\\Home.vue","mtime":1606650380659},{"path":"D:\\aplikasi\\Vuejs\\TroubeTicket\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aplikasi\\Vuejs\\TroubeTicket\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\aplikasi\\Vuejs\\TroubeTicket\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\aplikasi\\Vuejs\\TroubeTicket\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}